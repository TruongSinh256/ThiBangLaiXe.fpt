@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}
<h1>Kết quả bài thi</h1>
<div id="resultContainer">
</div>

<script>
    const urlParams = new URLSearchParams(window.location.search);
    const quizId = urlParams.get('quizId');

    function showDetails(quizId) {
        fetch(`http://localhost:7151/api/QuestionQuiz/id?id=${quizId}`)
            .then(response => response.json())
            .then(data => {
                const list = document.getElementById('resultContainer');
                list.innerHTML = ''; // Clear previous details
                const questionDataMap = new Map(); // Map to store question data and answers hay
                data.forEach(detail => {
                    // Lấy thông tin chi tiết câu hỏi
                    fetch(`http://localhost:7151/api/Question/${detail.questionId}`)
                        .then(response => response.json())
                        .then(questionData => {
                            // Lấy thông tin chi tiết các câu trả lời
                            fetch(`http://localhost:7151/api/Answer/${detail.questionId}`)
                                .then(response => response.json())
                                .then(answerData => {
                                    if (!questionDataMap.has(detail.questionId)) {
                                        questionDataMap.set(detail.questionId, {
                                            question: questionData,
                                            answers: answerData,                              
                                        });
                                    }
                                    // Update UI
                                    questionDataMap.forEach((value) => {
                                        const item = document.createElement('div');
                                        item.classList.add('exam-detail-item', 'mb-3', 'p-3', 'border', 'rounded');

                                        const { question, answers } = value;
                                        const correctAnswer = answers.find(a => a.correct);
                                        

                                        item.innerHTML = `
                                                <p><strong>Câu hỏi:</strong> ${question.questionContent}</p>
                                                <div class="answers">
                                                    ${answers.map(answer => {
                                            const isCorrect = answer.correct;
                                            const answerStyle = (selectedAnswerId === answer.answerId && !isCorrect) ? 'color: red;' : '';
                                            return `
                                                            <p style="${answerStyle}">${answer.answerContent}</p>
                                                            ${isCorrect ? `<p style="color: green;"><strong>Đáp án đúng:</strong> ${answer.answerContent}</p>` : ''}
                                                        `;
                                        }).join('')}
                                                </div>
                                            `;
                                        list.appendChild(item);
                                    });
                                })
                                .catch(error => console.error('Error fetching answer details:', error));
                        })
                        .catch(error => console.error('Error fetching question details:', error));
                });

                document.getElementById('examDetails').style.display = 'block';
            })
            .catch(error => console.error('Error fetching exam details:', error));
    }

    // Gọi hàm fetchTakeAndAnswers khi trang được tải
    window.onload = function () {
        showDetails(quizId);
    };
</script>


